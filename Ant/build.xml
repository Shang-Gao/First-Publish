<project name="Sample usage of Salesforce Ant tasks" default="test" basedir="." xmlns:sf="antlib:com.salesforce">

    <property file="build.properties"/>
    <property environment="env"/>

    <!-- Setting default value for username, password and session id properties to empty string 
         so unset values are treated as empty. Without this, ant expressions such as ${sf.username}
         will be treated literally.
    -->
    <condition property="sf.username" value=""> <not> <isset property="sf.username"/> </not> </condition>
    <condition property="sf.password" value=""> <not> <isset property="sf.password"/> </not> </condition>
    <condition property="sf.sessionId" value=""> <not> <isset property="sf.sessionId"/> </not> </condition>

    <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
        <classpath>
            <pathelement location="../ant-salesforce.jar" />        	
        </classpath>
    </taskdef>
	
    <!-- Test out deploy and retrieve verbs for package 'mypkg' -->
    <target name="test">
      <!-- Upload the contents of the "mypkg" package -->
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="mypkg" rollbackOnError="true"/>
      <mkdir dir="retrieveOutput"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveOutput" packageNames="MyPkg"/>
    </target>

    <!-- Retrieve an unpackaged set of metadata from your org -->
    <!-- The file unpackaged/package.xml lists what is to be retrieved -->
    <target name="retrieveUnpackaged">
      <mkdir dir="retrieveUnpackaged"/>
      <!-- Retrieve the contents into another directory -->
      <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="retrieveUnpackaged" unpackaged="unpackaged/package.xml"/>
    </target>

    <!-- Retrieve all the items of a particular metadata type -->
    <target name="bulkRetrieve">
      <sf:bulkRetrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" metadataType="${sf.metadataType}" retrieveTarget="retrieveUnpackaged"/>
    </target>

    <!-- Retrieve metadata for all the packages specified under packageNames -->
    <target name="retrieveHmTraining">
      <sf:retrieve username="${sf.HmTrainingUsername}" password="${sf.HmTrainingPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" 
	  retrieveTarget="RetrieveSFDCSource_HMTraining\src" unpackaged="RetrieveSFDCSource_HMTraining\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveHmTrainingFields">
      <sf:listMetadata  username="${sf.HmTrainingUsername}" password="${sf.HmTrainingPassword}" serverurl="${sf.serverurl}"  
	   trace="true" metadataType="CustomField" resultFilePath="listMetadata/"/>
    </target>
	
	<target name="retrieveQA1">
      <sf:retrieve username="${sf.HmQa1Username}" password="${sf.HmQa1Password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="RetrieveQA1\src" unpackaged="RetrieveQA1\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveHmDev">
      <sf:retrieve username="${sf.HmDevUsername}" password="${sf.HmDevPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="RetrieveHmDev\src" unpackaged="RetrieveHmDev\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveCbDev">
      <sf:retrieve username="${sf.CbDevUsername}" password="${sf.CbDevPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="RetrieveCbDev\src" unpackaged="RetrieveCbDev\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveSit">
      <sf:retrieve username="${sf.SitUsername}" password="${sf.SitPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="Retrieve_Sit\src" unpackaged="Retrieve_Sit\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveYouDo">
      <sf:retrieve username="${sf.YouDoUsername}" password="${sf.YouDoPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="Retrieve_YouDo\src" unpackaged="Retrieve_Sit\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveLai">
      <sf:retrieve username="${sf.LaiUsername}" password="${sf.LaiPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="Retrieve_Lai\src" unpackaged="Retrieve_Lai\package.xml" trace="true"/>
    </target>
	
	<target name="retrieveHmPROD">
      <sf:retrieve username="${sf.HmProdUsername}" password="${sf.HmProdPassword}" serverurl="${sf.prodServerUrl}" maxPoll="${sf.maxPoll}" retrieveTarget="Retrieve_HMProd\src" unpackaged="Retrieve_HMProd\package.xml" trace="true"/>
    </target>

    <!-- Deploy the unpackaged set of metadata retrieved with retrieveUnpackaged and run tests in this organization's namespace only-->
    <target name="deployUnpackaged">
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="retrieveUnpackaged" rollbackOnError="true"/>
    </target>

    <!-- Deploy a zip of metadata files to the org -->
    <target name="deployZip">
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" zipFile="${sf.zipFile}" pollWaitMillis="1000" rollbackOnError="true"/>
    </target>

    <!-- Shows deploying code & running tests for code in directory -->
    <target name="deployCode">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" testLevel="RunSpecifiedTests" rollbackOnError="true">
      	 <runTest>SampleDeployClass</runTest> 
      </sf:deploy>
    </target>
	
	<target name="deployHMTraining">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.HmTrainingUsername}" password="${sf.HmTrainingPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="Retrieve_HMProd\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<!-- Shows deploying code & running tests for code in directory -->
    <target name="deploySean">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.HmDevSgUsername}" password="${sf.HmDevSgPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="RetrieveSFDCSource_HMTraining\src" rollbackOnError="true" runAllTests="false" checkOnly="true">

      </sf:deploy>
    </target>
	
	<!-- Shows deploying code & running tests for code in directory -->
    <target name="deployHMAus">
		<antcall target="t11" />
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.HmAusUsername}" password="${sf.HmAusPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="tst\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<target name="t11">
		<echo> -------------sssggg------------</echo>
	</target>
	
	<target name="retrieveHmAus">
      <sf:retrieve username="${sf.HmAusUsername}" password="${sf.HmAusPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="Retrieve_HmAus\src" unpackaged="Retrieve_HmAus\package.xml" trace="true"/>
    </target>
	
	<target name="deployHmAus">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.HmAusUsername}" password="${sf.HmAusPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="DeployHmAus\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<!-- Shows removing code; only succeeds if done after deployCode -->
    <target name="undeployHmAus">
      <sf:deploy username="${sf.HmAusUsername}" password="${sf.HmAusPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="Undeploy_HmAus"/>
    </target>
	
	
	 <target name="deployLai">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.LaiUsername}" password="${sf.LaiPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="Retrieve_HMProd\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<target name="deployHmDev">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.HmDevUsername}" password="${sf.HmDevPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="DeployHmDev\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<target name="deploySit">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.SitUsername}" password="${sf.SitPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="\SFDCSource_Sit\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<!-- Shows deploying code & running tests for code in directory -->
    <target name="deployQA1">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.HmQa1Username}" password="${sf.HmQa1Password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="Retrieve_HMProd\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	<target name="deployYouDo">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.YouDoUsername}" password="${sf.YouDoPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="Retrieve_HMProd\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
	  <!--<installPackage namespace="ints" version="1.38" packagePassword="" username="${sf.YouDoUsername}" password="${sf.YouDoPassword}"/>
	  <installPackage namespace="loan" version="1.1813" packagePassword="" username="${sf.YouDoUsername}" password="${sf.YouDoPassword}"/>
	  <installPackage namespace="peer" version="1.60" packagePassword="" username="${sf.YouDoUsername}" password="${sf.YouDoPassword}"/>-->
    </target>
	
	<target name="deployCbDev">
      <!-- Upload the contents of the "codepkg" directory, running the tests for just 1 class -->
      <sf:deploy username="${sf.CbDevUsername}" password="${sf.CbDevPassword}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="RetrieveSFDCSource_HMTraining\src" rollbackOnError="true" runAllTests="false" checkOnly="false">

      </sf:deploy>
    </target>
	
	 <!-- Shows deploying code with no TestLevel sepcified -->
    <target name="deployCodeNoTestLevelSpecified">
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" rollbackOnError="true"/>
    </target>
	
	<!-- Shows deploying code and running tests only within the org namespace -->
	<target name="deployCodeRunLocalTests">
	  <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" rollbackOnError="true"  testlevel="RunLocalTests"/>
	</target>
	
    <!-- Shows removing code; only succeeds if done after deployCode -->
    <target name="undeployCode">
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="removecodepkg"/>
    </target>	

    <!-- Shows retrieving code; only succeeds if done after deployCode -->
    <target name="retrieveCode">
      <!-- Retrieve the contents listed in the file codepkg/package.xml into the codepkg directory -->
      <sf:retrieve username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" retrieveTarget="codepkg" unpackaged="codepkg/package.xml"/>
    </target>

    <!-- Shows deploying code, running all tests, and running tests (1 of which fails), and logging. -->
    <target name="deployCodeFailingTest">
      <!-- Upload the contents of the "codepkg" package, running all tests -->
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" testLevel="RunAllTestsInOrg" rollbackOnError="true" logType="Debugonly"/>
    </target>

    <!-- Shows check only; never actually saves to the server -->
    <target name="deployCodeCheckOnly">
      <sf:deploy username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" deployRoot="codepkg" checkOnly="true"/>
    </target>
	
	<!-- Shows quick deployment of recent validation. Set the property sf.recentValidationId to your recent check only deployment Id -->
	<target name="quickDeploy">
	  <sf:deployRecentValidation  username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" recentValidationId="${sf.recentValidationId}"/>
	</target>
	
	<!-- Shows cancel deployment of deploy request either pending or in progress. Set property sf.requestId to Id of pending or in progress deploy request -->
	<target name="cancelDeploy">
	  <sf:cancelDeploy  username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" maxPoll="${sf.maxPoll}" requestId="${sf.requestId}"/>
	</target>

	<!-- Retrieve the information of all items of a particular metadata type -->
    <target name="listMetadata">
      <sf:listMetadata username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}" metadataType="${sf.metadataType}"/>
    </target>

	<!-- Retrieve the information on all supported metadata type -->
    <target name="describeMetadata">
      <sf:describeMetadata username="${sf.username}" password="${sf.password}" sessionId="${sf.sessionId}" serverurl="${sf.serverurl}"/>
    </target>
</project>
